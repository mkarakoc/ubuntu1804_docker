
CREATE AND UPDATE A DOCKER IMAGE
________________________________________________________________
----------------------------------------------------------------
# REF: https://rominirani.com/docker-tutorial-series-part-5-building-your-own-docker-images-b4a448b44afc

# X11 SERVER RUN 
# following line directly opens a jupyter server in a browser
# CMD jupyter notebook --ip=0.0.0.0 --port=8080
#
# following the first line builds a docker container 
# and the second line runs the container with X11 server
# sudo docker build -t jupyter_docker .
# sudo docker run -ti -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix jupyter_docker

# REMOVE ALL DOCKER IMAGES
# Purging All Unused or Dangling Images, Containers, Volumes, and Networks
# https://www.digitalocean.com/community/tutorials/how-to-remove-docker-images-containers-and-volumes
1. # Docker provides a single command that will clean up any resources — images, containers, volumes, 
     and networks — that are dangling (not associated with a container):
     docker system prune
2. # To additionally remove any stopped containers and all unused images (not just dangling images), add the -a flag to the command:
     docker system prune -a

# HOW TO CREATE YOUR FIRST IMAGE
1. # pull base image
   docker pull ubuntu:latest
2. # create your own image
   sudo docker run -it --name aimpy ubuntu:latest
3. # commit the image 
   sudo docker commit aimpy hesap/aimpy
4. # push updated image to Docker account
   sudo docker push hesap/aimpy

HOW TO UPDATE YOUR DOCKER IMAGE
1. # remove older local image copy
   sudo docker rm aimpy
2. # run a new local image
   sudo docker run -it --name aimpy hesap/aimpy
3. # commit the image 
   sudo docker commit aimpy hesap/aimpy
   sudo docker commit joyvan_new hesap/aimpy:jovyan_stable_latest_202002231945
4. # push updated image to Docker account
   sudo docker push hesap/aimpy
5. # you can repeat for every new update of the image

LIST LOCALDOCKER IMAGES
# REF: https://linuxhint.com/list_docker_images/

1. # To list all the locally stored Docker images, you can run the following command:
   sudo docker image list
2. # To list the locally stored Docker images along with the long image ID, run the following command:
   docker image list --no-trunc
3. # To list all the unused Docker images on your Docker host, run the following command:
   docker image list --filter dangling=true
4. # To list only the image IDs of the unused Docker images on your Docker host, run the following command:
   docker image list --quiet --filter dangling=true
5. # To list all the image IDs of the good Docker images, run the following command:
   docker image list --quiet --filter dangling=false

CREATE AS MANY AS LOCAL COPY OF DOCKER IMAGE
1. # create a new local image 
   sudo docker run -it --name aimpy-new hesap/aimpy
   # another example
   sudo docker run -it --name jovyan_new hesap/aimpy:jovyan_stable_latest_20181016_1758
================================================================


CHANGE DNS SERVER (this is necessary in my university)
________________________________________________________________
----------------------------------------------------------------
1. echo "nameserver 10.0.128.100" | tee /etc/resolv.conf > /dev/null

# The original file at: etc/resolv.conf
# REF: https://askubuntu.com/questions/91543/apt-get-update-fails-to-fetch-files-temporary-failure-resolving-error
----------------------------------------------------------------
## Dynamic resolv.conf(5) file for glibc resolver(3) generated by resolvconf(8)
##     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
#search akdeniz.edu.tr
#
#nameserver 8.8.8.8
#nameserver 8.8.4.4
================================================================


INSTALL AND CONFIGURE UBUNTU 
________________________________________________________________
----------------------------------------------------------------
# install some necessary system programs
1. apt-get update && apt-get --no-install-recommends -y install sudo build-essential  wget git apt-utils m4 net-tools

# add a user named as "main" other than root but it has sudo privileges 
1. useradd -m -s /bin/bash main && echo "main:main" | chpasswd && adduser main sudo
# delete password for user "main"
2. passwd --delete main
================================================================


INSTALL AND CONFIGURE PYTHON
________________________________________________________________
----------------------------------------------------------------
# instal python2 and python3
1. apt-get --no-install-recommends -y install python cython python-dev 
2. apt-get --no-install-recommends -y install python-pip python-setuptools
3. apt-get --no-install-recommends -y install python3 python3-dev 
4. apt-get --no-install-recommends -y install python3-pip python3-setuptools

# install some python2 packages
1. pip install symengine
2. pip install sympy
3. pip install matplotlib

# install some python3 packages
1. pip3 install symengine
2. pip3 install sympy
3. pip3 install matplotlib

# install jupyter for python2 and python3 (I am not sure if i need to install both)
1. pip install jupyter
2. pip3 install jupyter
================================================================


INSTALL LIBRARIES needed by FLINT
________________________________________________________________
----------------------------------------------------------------
# create a folder to store library files and folders
1. mkdir /home/main/pylibs

# download or clone: gmplib, mpfr, flint2, and arb files
1. wget https://gmplib.org/download/gmp/gmp-6.1.2.tar.bz2
2. wget http://www.mpfr.org/mpfr-current/mpfr-4.0.2.tar.gz
3. git clone https://github.com/fredrik-johansson/flint2.git
4. git clone https://github.com/fredrik-johansson/arb.git
5. git clone https://github.com/fredrik-johansson/python-flint.git

# install m4
sudo apt-get install m4

# install gmplib
1. tar -xvf gmp-6.1.2.tar.bz2
2. cd ./gmp-6.1.2/ && ./configure && make && sudo make install && cd ..

# install mpfr
1. tar -xvf mpfr-4.0.1.tar.gz
2. cd ./mpfr-4.0.1/ && ./configure && make && sudo make install && cd ..

# install flint2 and arb
1. cd ./flint2/ && ./configure && make && sudo make install && cd ..
2. cd ./arb/ && ./configure && make && sudo make install && cd ..

# install python-flint for python2
1. cd ./python-flint
2. sudo pip install Cython
3. sudo python ./setup.py build_ext --include-dirs=/home/main/pylibs/flint2:/home/main/pylibs/arb --library-dirs=/home/main/pylibs/flint2:/home/main/pylibs/arb
4. sudo python setup.py install && cd ..
5. export LD_LIBRARY_PATH=/home/main/pylibs/flint2:/home/main/pylibs/arb:$LD_LIBRARY_PATH
6. put PATH in 5. to end of ".bashrc" file.

# install python-flint for python3
1. sudo pip3 install Cython
2. sudo pip3 install python-flint
================================================================


JUPYTER NOTEBOOK EXTENSIONS (!!! I WILL DO THIS LATER) 
________________________________________________________________
----------------------------------------------------------------
# to reach jupyter server outside of the Docker container
sudo docker run -p 8888:8888 -it --name aimpy hesap/aim_trials

# add following lines to: /home/main/.jupyter/jupyter_notebook_config.py
c = get_config()
c.NotebookApp.ip = '172.17.0.58'
c.NotebookApp.open_browser = False
c.NotebookApp.port = 8888
c.NotebookApp.password = u'sha1:7b7e5f97de15:0021be4ccbce7a367f35d10a3c0270a9b44f210b'


# run a jupyter server without notebook
jupyter notebook --profile=nbserver &

# to see which jupyter servers are on
lsof -n -i4TCP:8888
>>> COMMAND   PID USER   FD   TYPE    DEVICE SIZE/OFF NODE NAME
>>> jupyter-n  22 main    3u  IPv4 130357247      0t0  TCP 172.17.0.58:8888 (LISTEN)
>>> jupyter-n  22 main    9u  IPv4 130361442      0t0  TCP 172.17.0.58:8888->10.7.1.69:50753 (ESTABLISHED)

# kill servers
kill -9  [PID]



23. mkdir .ipython
24. cd /home/main/.ipython
25. git clone https://github.com/ipython-contrib/jupyter_contrib_nbextensions

jupyter-nbextensions_configurator enable --user
jupyter notebook --generate-config

26. pip install jupyter_contrib_nbextensions
27. pip3 install jupyter_contrib_nbextensions
27. pip install jupyter_nbextensions_configurator
28. pip3 install jupyter_nbextensions_configurator



29. jupyter-nbextensions_configurator enable --user
30.      jupyter nbextension enable hide_input_all/main \
  && jupyter nbextension enable livemdpreview/livemdpreview \
  && jupyter nbextension enable rubberband/main \   
  && jupyter nbextension enable toc2/main \   
  && jupyter nbextension enable varInspector/main \   
  && jupyter nbextension enable varInspector/main \   
  && jupyter nbextension enable collapsible_headings/main \   
  && jupyter nbextension enable hinterland/hinterland \   
  && jupyter nbextension enable snippets_menu/main \   
  && jupyter nbextension enable execute_time/ExecuteTime \   
  && jupyter nbextension enable hide_input/main \   
  && jupyter nbextension enable runtools/main \   
  && jupyter nbextension enable toggle_all_line_numbers/main  
================================================================





















FROM andrewosh/binder-base

MAINTAINER Mesut Karakoç <mesudkarakoc@gmail.com>

#### ROOT USER ####
USER root
###################

RUN apt-get --no-install-recommends update \
 && apt-get --no-install-recommends -y install \
            sudo \
            apt-utils

#### make MAIN user passwordless
#RUN useradd -m main && echo "main:main" | chpasswd && adduser main sudo
RUN echo "main:main" | chpasswd && adduser main sudo
RUN passwd --delete main

#### MAIN USER ####
USER main
###################

# M4: macro processing language
RUN sudo apt-get --no-install-recommends -y install m4

# create folder for following libs
RUN mkdir /home/main/pylibs

# GMP LIB
RUN \
     cd /home/main/pylibs \
  && wget https://gmplib.org/download/gmp/gmp-6.1.2.tar.bz2 \
  && tar -xvf gmp-6.1.2.tar.bz2 \
  && rm -f gmp-6.1.2.tar.bz2 \
  && cd ./gmp-6.1.2/ && ./configure && make && sudo make install && cd ../../

# MPFR
RUN \
     cd /home/main/pylibs \
  && wget http://www.mpfr.org/mpfr-current/mpfr-4.0.1.tar.gz \
  && tar -xvf mpfr-4.0.1.tar.gz \
  && rm -f mpfr-4.0.1.tar.gz \
  && cd ./mpfr-4.0.1/ && ./configure && make && sudo make install && cd ../../

# FLINT2
#- git clone --depth=50 --branch=master https://github.com/fredrik-johansson/flint2.git
RUN \
     cd /home/main/pylibs \
  && git clone https://github.com/fredrik-johansson/flint2.git \
  && cd ./flint2/ && ./configure && make && sudo make install && cd ../../

# ARB
RUN \
     cd /home/main/pylibs \
  && git clone https://github.com/fredrik-johansson/arb.git \
  && cd ./arb/ && ./configure && make && sudo make install && cd ../../

##############
# python-flint
##############
RUN sudo apt-get --no-install-recommends -y install cython python-dev

RUN \
     cd /home/main/pylibs \
  && git clone https://github.com/fredrik-johansson/python-flint.git \
  && cd ./python-flint \
  && sudo python ./setup.py build_ext --include-dirs=/home/main/pylibs/flint2:/home/main/pylibs/arb \
                                      --library-dirs=/home/main/pylibs/flint2:/home/main/pylibs/arb \
  && sudo python setup.py install \
  && cd ../../
 
# flint path for PYTHON 2
#ENV export LD_LIBRARY_PATH=/home/main/flint2:/home/main/arb:$LD_LIBRARY_PATH
RUN cp /home/main/pylibs/flint2/libflint.so.13 anaconda2/lib/ \
 && cp -rf /home/main/pylibs/arb/libarb.so.2* /home/main/anaconda2/lib/

# upgrade pip 2 and 3
RUN sudo /home/main/anaconda2/bin/pip install --upgrade pip
RUN sudo /home/main/anaconda2/envs/python3/bin/pip install --upgrade pip

# flint for PYTHON 3
RUN sudo /home/main/anaconda2/envs/python3/bin/pip install python-flint

# install plotly 
RUN sudo /home/main/anaconda2/bin/pip install plotly
RUN sudo /home/main/anaconda2/envs/python3/bin/pip install plotly
# Found existing installation: nbformat 4.0.1
# Cannot uninstall 'nbformat'. It is a distutils installed project and thus we cannot accurately 
# determine which files belong to it which would lead to only a partial uninstall.

# symengine python 2 and 3
RUN sudo /home/main/anaconda2/bin/pip install symengine
RUN sudo /home/main/anaconda2/envs/python3/bin/pip install symengine

# jupyter notebook
RUN jupyter notebook --generate-config
ADD jupyter_notebook_config.py jupyter_notebook_config.py
RUN cp jupyter_notebook_config.py /home/main/.jupyter/

# jupyter nbextensions (install)
RUN sudo /home/main/anaconda2/bin/pip install jupyter_contrib_nbextensions
RUN sudo /home/main/anaconda2/bin/pip install jupyter_nbextensions_configurator
RUN sudo /home/main/anaconda2/envs/python3/bin/pip install jupyter_contrib_nbextensions
RUN sudo /home/main/anaconda2/envs/python3/bin/pip install jupyter_nbextensions_configurator

RUN git clone \
               https://github.com/ipython-contrib/jupyter_contrib_nbextensions \
               /home/main/jupyter_contrib_nbextensions
RUN mkdir /home/main/.ipython

RUN cp -rf \
            /home/main/jupyter_contrib_nbextensions/src/jupyter_contrib_nbextensions/nbextensions/ \
            /home/main/.ipython/

# jupyter nbextensions (enable)
RUN jupyter-nbextensions_configurator enable --user

# enable spesific nbextension from start
RUN \
     jupyter nbextension enable hide_input_all/main \
  && jupyter nbextension enable livemdpreview/livemdpreview \
  && jupyter nbextension enable rubberband/main \   
  && jupyter nbextension enable toc2/main \   
  && jupyter nbextension enable varInspector/main \   
  && jupyter nbextension enable varInspector/main \   
  && jupyter nbextension enable collapsible_headings/main \   
  && jupyter nbextension enable hinterland/hinterland \   
  && jupyter nbextension enable snippets_menu/main \   
  && jupyter nbextension enable execute_time/ExecuteTime \   
  && jupyter nbextension enable hide_input/main \   
  && jupyter nbextension enable runtools/main \   
  && jupyter nbextension enable toggle_all_line_numbers/main  
  
#RUN \
#     mkdir /home/main/notebooks \
#  && mkdir /home/main/notebooks/aim 

#RUN \
#     mkdir /home/main/notebooks \
#  && cd /home/main/notebooks \
#  && mkdir githubFiles \
#  && mv .travis.yml Dockerfile Dockerfile_tryout jupyter_notebook_config.py python_test.py githubFiles \
#  && mv githubFiles ../

#
